<!DOCTYPE html>
<html>
<title>Visualizing Algebraic Surfaces</title>

<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>

<style>
.slideshow1 {display:none;}
</style>

<style>
.slideshow2 {display:none;}
</style>



<body>

<!--Top navigation bar-->
<div class="w3-top">
  <div class="w3-bar w3-white w3-wide w3-padding w3-card">
    <a href="./home.htm" class="w3-bar-item w3-button"><b>Go back</b></a>

    <div class="w3-right w3-hide-small">
      <a href="#27 Lines" class="w3-bar-item w3-button">27 Lines</a>
      <a href="#Calculus III" class="w3-bar-item w3-button">Calculus III</a>
    </div>
  </div>
</div>



<!--Main body-->
<div>
  <div class="w3-container w3-padding-32" id="27 Lines">
    <h3 class="w3-border-bottom w3-border-light-grey w3-padding-16">27 Lines on the Clebsh Surface</h3>
      <div class="w3-content w3-display-container" style="max-width:300px">
        <img class="slideshow1" src="./images/clebsh1.jpg" alt="clebsh 1" style="max-width:300px">
        <img class="slideshow1" src="./images/clebsh2.jpg" alt="clebsh 2" style="max-width:300px">
        <img class="slideshow1" src="./images/clebsh3.jpg" alt="clebsh 3" style="max-width:300px">
        <button class="w3-button w3-black w3-display-bottomleft" onclick="plusSlides(-1, 0)">&#10094;</button>
        <button class="w3-button w3-black w3-display-bottomright" onclick="plusSlides(1, 0)">&#10095;</button>
      </div>
    <p>In algebraic geometry, there is a remarkable <a href="https://en.wikipedia.org/wiki/Cubic_surface#27_lines_on_a_cubic_surface">theorem</a>
      that states that any smooth, cubic surface has 27 lines that lie on it. In collaboration with postdoc
      <a href="https://nathanfieldsteel.github.io/">Nathan Fieldsteel</a>, we managed to 3D print the
      <a href="https://en.wikipedia.org/wiki/Clebsch_surface">Clebsh surface</a>. Using <a href="https://www.sagemath.org/">Sage</a> to
      generate the surface and <a href="https://www.blender.org/">Blender</a> to make it look a little more refined, we used the
      University of Kentucky Math Lab's <a href="https://formlabs.com/3d-printers/form-2/">Form 2</a> 3D printer to print it. After a couple
      of test prints, we finally got a fantastic model to hold and display.
    </p>
  </div>

  <div class="w3-container w3-padding-32" id="Calculus III">
    <h3 class="w3-border-bottom w3-border-light-grey w3-padding-16">Calculus III</h3>
    <div class="w3-content w3-display-container" style="max-width:270px">
      <img class="slideshow2" src="./images/saddle1.jpg" alt="saddle 1" style="max-width:270px">
      <img class="slideshow2" src="./images/saddle2.jpg" alt="saddle 2" style="max-width:270px">
      <img class="slideshow2" src="./images/paraboloid1.jpg" alt="paraboloid 1" style="max-width:270px">
      <img class="slideshow2" src="./images/paraboloid2.jpg" alt="paraboloid 2" style="max-width:270px">
      <button class="w3-button w3-black w3-display-bottomleft" onclick="plusSlides(-1, 1)">&#10094;</button>
      <button class="w3-button w3-black w3-display-bottomright" onclick="plusSlides(1, 1)">&#10095;</button>
    </div>
    <p>For many students, the higher dimensionality of multivariate calculus can be a challenge to handle.
        By creating interactive and tangible objects related to some of the objects, the goal is to make the
        concepts more accessible and to provide some intuition for students. Because much of Calculus III begins
        in \( \mathbb{R}^3 \), many of the surfaces can actually be 3D-printed. Photos are courtesy of
        <a href="https://math.osu.edu/people/osborne.475">Christina Osborne</a>.
    </p>
  </div>
</div>

</div>



<script>
var slideIndex = [1,1];
/* Class the members of each slideshow group with different CSS classes */
var slideId = ["slideshow1", "slideshow2"]
showSlides(1, 0);
showSlides(1, 1);

function plusSlides(n, no) {
  showSlides(slideIndex[no] += n, no);
}

function showSlides(n, no) {
  var i;
  var x = document.getElementsByClassName(slideId[no]);
  if (n > x.length) {slideIndex[no] = 1}
  if (n < 1) {slideIndex[no] = x.length}
  for (i = 0; i < x.length; i++) {
    x[i].style.display = "none";
  }
  x[slideIndex[no]-1].style.display = "block";
}
</script>

</body>

</html>
